package com.zimi.zimixing.biz;import com.zimi.zimixing.BaseApplication;import com.zimi.zimixing.bean.AccountTaskBean;import com.zimi.zimixing.bean.ImgBean;import com.zimi.zimixing.bean.OrgnizationBean;import com.zimi.zimixing.bean.ResponseBean;import com.zimi.zimixing.bean.gps_install.GPSBean;import com.zimi.zimixing.bean.gps_install.GPSDeviceInfoBean;import com.zimi.zimixing.bean.gps_install.NewBindingBean;import com.zimi.zimixing.configs.ConfigFile;import com.zimi.zimixing.configs.ConfigServer;import com.zimi.zimixing.configs.Constant;import com.zimi.zimixing.utils.FileUtil;import com.zimi.zimixing.utils.imageutils.ImageCompressUtil;import java.io.File;import java.util.HashMap;/** * 用户信息相关 网络业务 gps安装 * <p> * <br> Author: 谭俊 * <br> Version: 1.0.0 * Created by tanjun on 2018/5/7. */public class InstallBiz {    /**     *  获取所属组织     * <p>     * <br> Version: 1.0.0     * <br> CreateAuthor: 谭俊     * <br> CreateTime: 2018/5/7 16:43     * <br> UpdateAuthor: 叶青     * <br> UpdateTime: 2018/5/7 16:43     * <br> UpdateInfo: (此处输入修改内容,若无修改可不写.)     *     * @return ResponseBean     */    public static ResponseBean getOrganization(){        HashMap<String, String> params = BaseBiz.getPostHeadMap();        params.put("token", BaseApplication.getInstance().getToken());        params.put(ConfigServer.SERVER_METHOD_KEY, ConfigServer.METHOD_ORGANIZATION);        ResponseBean responseBean = BaseOkBiz.sendPost(params);        if (BaseBiz.checkSuccess(responseBean)){            responseBean.setResponseObjectList(responseBean, OrgnizationBean.class, "returnList");        }        return responseBean;    }    /**     * 生成客户信息     * @param custName     * @param plateNo     * @param orgId     * @return     */    public static ResponseBean createCustInfo(String custName, String plateNo, String orgId){        HashMap<String, String> params = BaseBiz.getPostHeadMap();        params.put("custName", custName);        params.put("plateNo", plateNo);        params.put("orgId",orgId);        params.put("token", BaseApplication.getInstance().getToken());        params.put(ConfigServer.SERVER_METHOD_KEY, ConfigServer.METHOD_CREATECUSTINFO);        ResponseBean responseBean = BaseOkBiz.sendPost(params);        return responseBean;    }    /**     * 输入imei号 查询设备信息     */    public static ResponseBean getImeiInfo(String imeiId, String custId){        HashMap<String, String> params = BaseBiz.getPostHeadMap();        params.put("token", BaseApplication.getInstance().getToken());        params.put(ConfigServer.SERVER_METHOD_KEY, ConfigServer.METHOD_GETIMEIINFO);        params.put("custId",custId);        params.put("imeiId", imeiId);        ResponseBean responseBean = BaseOkBiz.sendPost(params);        if (BaseBiz.checkSuccess(responseBean)){            responseBean.setResponseObject(responseBean, GPSDeviceInfoBean.class);        }        return responseBean;    }    /**     * gps安装     * @param imeiId     * @param simId     * @return     */    public static ResponseBean detect(String imeiId, String simId, String custId){        HashMap<String, String> params = BaseBiz.getPostHeadMap();        params.put("token", BaseApplication.getInstance().getToken());        params.put(ConfigServer.SERVER_METHOD_KEY, ConfigServer.METHOD_DETECT);        params.put("simId", simId);        params.put("custId", custId);        params.put("imeiId", imeiId);        ResponseBean responseBean = BaseOkBiz.sendPost(params);        return responseBean;    }    /**     * 车辆评估 gps安装 车辆抵押 车辆解押     * 根据不同方法 图片上传 groupId 不同     * @param imgType     * @param     * @param fileName     * @param pathUrl     * @return     */    public static ResponseBean upLoadImg(int imgType,String fileName, String pathUrl, String imeiId){        HashMap<String, String> params = BaseBiz.getPostHeadMap();        params.put("token", BaseApplication.getInstance().getToken());        if (Constant.positionImages == imgType){ //gps安装 装车位置            params.put("groupId", Constant.GROUPID_POSITIONIMAGES);            params.put("imeiId", imeiId);        }else if (Constant.materialsImages == imgType){            params.put("groupId", "materialsImages");        }else if (Constant.contractImages == imgType){ //车辆抵押            params.put("groupId", "hengxinContractInformation");        }else if (Constant.carImages == imgType){ //车辆评估            params.put("groupId", "carImages");        }else if (Constant.vehicleUnbindMortgage == imgType){ //车辆解押            params.put("groupId", "VehicleUnbindMortgage");        }        HashMap<String, File> hashMap = new HashMap<>();        final String vPath = ImageCompressUtil.compressImg(pathUrl);        String jpg = vPath.substring(vPath.lastIndexOf("."));        File file = new File(ConfigFile.PATH_IMAGES + fileName + jpg); // 路径 + 文件名        try {            if (file.exists()) {                if (file.delete()) {                    if (file.createNewFile()) {                        FileUtil.copyFile(new File(vPath),file);                        hashMap.put("imageFiles", file);                    }                }            } else {                if (file.createNewFile()) {                    FileUtil.copyFile(new File(vPath),file);                    hashMap.put("imageFiles", file);                }            }        } catch (Exception e) {            e.printStackTrace();        }        return BaseOkBiz.upLoadFile(ConfigServer.SERVER_API_URL.replace("https","http") + ConfigServer.METHOD_UPLOADIMG, params, hashMap);    }    /**     * 根据 类型查询图片     * 车辆评估 车辆抵押 gps安装     * @param imgType     * @return     */    public static ResponseBean queryAllImgByParams(int imgType, String imeiId){        HashMap<String, String> params = BaseBiz.getPostHeadMap();        params.put("token", BaseApplication.getInstance().getToken());        if (Constant.positionImages == imgType) {            params.put("groupId", "positionImages");            params.put("imeiId", imeiId);        } else if (Constant.materialsImages == imgType) {            params.put("groupId", "materialsImages");        } else if (Constant.contractImages == imgType) { // 车辆抵押            params.put("groupId", "hengxinContractInformation");        } else if (Constant.carImages == imgType) { //车辆评估            params.put("groupId", "carImages");        }else if (Constant.vehicleUnbindMortgage == imgType) {//车辆解押            params.put("groupId", "VehicleUnbindMortgage");        }        params.put(ConfigServer.SERVER_METHOD_KEY, ConfigServer.METHOD_QUERYALLIMGBYPARAMS);        ResponseBean responseBean = BaseOkBiz.sendPost(params);        if (BaseBiz.checkSuccess(responseBean)){            responseBean.setResponseObject(responseBean, ImgBean.class);        }        return responseBean;    }    /**     * 装车位置 gps安装 绑定     * @param custId     * @param imeiId     * @param simId     * @param posDesc     * @param isGetLocation     * @return     */    public static ResponseBean newBinding(String userName, String custId,                                          String imeiId, String simId,                                          String posDesc, String isGetLocation){        HashMap<String, String> params = BaseBiz.getPostHeadMap();        params.put("token", BaseApplication.getInstance().getToken());        params.put(ConfigServer.SERVER_METHOD_KEY, ConfigServer.METHOD_NEWBINDING);        params.put("name", userName);        params.put("simId", simId);        params.put("imeiId", imeiId);        params.put("custId", custId);        params.put("position", posDesc);        params.put("isGetLocation", isGetLocation);        ResponseBean responseBean = BaseOkBiz.sendPost(params);        if (BaseBiz.checkSuccess(responseBean)){            if (null == responseBean.getObject() || responseBean.getObject().equals("null")){                return responseBean;            }else {                responseBean.setResponseObject(responseBean, NewBindingBean.class);            }        }        return responseBean;    }    /**     * 获取gps定位信息     * gps安装     * @param custId     * @return     */    public static ResponseBean getLocationInfos(String custId){        HashMap<String, String> params = BaseBiz.getPostHeadMap();        params.put("token", BaseApplication.getInstance().getToken());        params.put("custId", custId);        params.put(ConfigServer.SERVER_METHOD_KEY, ConfigServer.METHOD_GETLOCATIONINFOS);        ResponseBean responseBean = BaseBiz.sendPost(params);        if (BaseBiz.checkSuccess(responseBean)){            responseBean.setResponseObject(responseBean, GPSBean.class);        }        return responseBean;    }    /**     * 评估 gps安装  车辆抵押 解押 删除     * @param imgType     * @param name     * @return     */    public static ResponseBean deleteImg(int imgType,String name, String imeiId){        HashMap<String, String> params = BaseBiz.getPostHeadMap();        params.put("token", BaseApplication.getInstance().getToken());        //params.put("businessId", businessId);        if (Constant.positionImages == imgType) {            params.put("groupId", "positionImages");            params.put("imeiId", imeiId);        } else if (Constant.materialsImages == imgType) {            params.put("groupId", "materialsImages");        } else if (Constant.contractImages == imgType) {            params.put("groupId", "hengxinContractInformation");        } else if (Constant.carImages == imgType) {            params.put("groupId", "carImages");        }else if (Constant.vehicleUnbindMortgage == imgType) {            params.put("groupId", "VehicleUnbindMortgage");        }        params.put("imageName", name);        params.put(ConfigServer.SERVER_METHOD_KEY, ConfigServer.METHOD_DELETEIMG);        return BaseOkBiz.sendPost(params);    }    /**     * 锁油 断电     * @param imeiId     * @param strLock     * @param uId     * @return     */    public static ResponseBean lockOilInstruction(String imeiId, String strLock,String uId){        HashMap<String, String> params = BaseBiz.getPostHeadMap();        params.put("token", BaseApplication.getInstance().getToken());        params.put("imeiId", imeiId);        params.put("lock", strLock);        params.put("uId", uId);        params.put("tenantId", "0000100001");        params.put(ConfigServer.SERVER_METHOD_KEY, ConfigServer.METHOD_INSTRUCTIONS);        ResponseBean responseBean = BaseOkBiz.sendPost(params);        return responseBean;    }    /**     * gps拆除     * @param imeiId     * @return     */    public static ResponseBean tearDown(String imeiId){        HashMap<String, String> params = BaseBiz.getPostHeadMap();        params.put("token", BaseApplication.getInstance().getToken());        params.put("imeiId", imeiId);        params.put(ConfigServer.SERVER_METHOD_KEY, ConfigServer.METHOD_TEARDOWN);        ResponseBean responseBean = BaseOkBiz.sendPost(params);        return responseBean;    }    public static ResponseBean installComplete(String userId, String custId){        HashMap<String, String> params = BaseBiz.getPostHeadMap();        params.put("token", BaseApplication.getInstance().getToken());        //params.put("userId", userId);        params.put("custId", custId);        params.put(ConfigServer.SERVER_METHOD_KEY, ConfigServer.METHOD_COMPLETETASK);        ResponseBean responseBean = BaseOkBiz.sendPost(params);        return responseBean;    }}