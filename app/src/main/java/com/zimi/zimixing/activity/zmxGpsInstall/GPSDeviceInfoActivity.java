package com.zimi.zimixing.activity.zmxGpsInstall;import android.Manifest;import android.content.Intent;import android.os.Bundle;import android.text.Editable;import android.text.TextUtils;import android.text.TextWatcher;import android.view.Gravity;import android.view.KeyEvent;import android.view.View;import android.view.inputmethod.InputMethodManager;import android.widget.Button;import android.widget.EditText;import android.widget.ImageView;import android.widget.TextView;import com.zimi.zimixing.R;import com.zimi.zimixing.activity.BaseActivity;import com.zimi.zimixing.activity.ScanActivity;import com.zimi.zimixing.bean.ResponseBean;import com.zimi.zimixing.bean.gps_install.GPSDeviceInfoBean;import com.zimi.zimixing.biz.InstallBiz;import com.zimi.zimixing.configs.RequestCode;import com.zimi.zimixing.executor.BaseTask;import com.zimi.zimixing.executor.RequestExecutor;import com.zimi.zimixing.utils.FileUtil;import com.zimi.zimixing.utils.IntentUtil;import com.zimi.zimixing.utils.LogUtil;import com.zimi.zimixing.utils.PermissionUtils;import com.zimi.zimixing.utils.ToastUtil;import com.zimi.zimixing.utils.dialog.CustomDialog;import com.zimi.zimixing.utils.dialog.DialogUtil;import com.zimi.zimixing.widget.TitleView;/** * Created by tanjun on 2018/1/18. * gps安装 设备信息 输入imei和sim卡界面 */public class GPSDeviceInfoActivity extends BaseActivity implements View.OnClickListener {    private TitleView title_view;    /** 输入imei */    private EditText et_input_imei;    /** 输入sim卡号 */    private EditText tv_device_sim;    /** 设备类型 设备名称 */    private TextView tv_device_type, tv_device_name;    /** 查询按钮 下一步按钮 */    private Button btn_search, btn_next;    private ImageView iv_scan;    private String businessId;    private String taskId;    private String custId;    private String processInstanceId;    private String imeiId;    private String simId;    private String mDeviceName;//设备名称    private String mDeviceType; //设备类型    private String isInput;    private String custIdForYL;//给玉林的custId    @Override    protected int getContentViewId() {        return R.layout.gps_device_info;    }    @Override    protected void findViews() {        title_view = (TitleView) findViewById(R.id.title_view);        iv_scan = (ImageView) findViewById(R.id.iv_scan);        et_input_imei = (EditText) findViewById(R.id.et_input_imei);        tv_device_sim = (EditText) findViewById(R.id.tv_device_sim);        tv_device_type = (TextView) findViewById(R.id.tv_device_type);        tv_device_name = (TextView) findViewById(R.id.tv_device_name);        btn_search = (Button) findViewById(R.id.btn_search);        btn_next = (Button) findViewById(R.id.btn_next);        tv_device_sim.setEnabled(false);        initEditText();    }    /**     * 对输入框设备     */    private void initEditText() {        /** 重新输入imei号时清空下面的内容 */        et_input_imei.addTextChangedListener(new TextWatcher() {            @Override            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {            }            @Override            public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {                tv_device_sim.setText("");                tv_device_type.setText("");                tv_device_name.setText("");            }            @Override            public void afterTextChanged(Editable editable) {            }        });    }    @Override    protected void onStart() {        tv_device_sim.setText("");        tv_device_type.setText("");        tv_device_name.setText("");        super.onStart();    }    @Override    protected void initGetData() {        title_view.setTitle(R.string.device_info);        title_view.setLeftBtnImg();        Bundle bundle = getIntent().getExtras();        if (bundle != null) {            //businessId = bundle.getString("businessId");            //taskId = bundle.getString("taskId");            custId = bundle.getString("custId");            //processInstanceId = bundle.getString("processInstanceId");        }    }    @Override    protected void init() {    }    @Override    protected void widgetListener() {        btn_search.setOnClickListener(this);        btn_next.setOnClickListener(this);        iv_scan.setOnClickListener(this);//扫描        /**         * imei 输入框 在键盘上点击搜索         */        et_input_imei.setOnKeyListener(new View.OnKeyListener() {            @Override            public boolean onKey(View view, int actionId, KeyEvent keyEvent) {                if (actionId == KeyEvent.KEYCODE_ENTER && keyEvent.getAction() == KeyEvent.ACTION_DOWN) {                    //隐藏键盘                    ((InputMethodManager) getSystemService(INPUT_METHOD_SERVICE))                            .hideSoftInputFromWindow(GPSDeviceInfoActivity.this.getCurrentFocus()                                    .getWindowToken(), InputMethodManager.HIDE_NOT_ALWAYS);                    getImeiInfo();                }                return false;            }        });    }    private boolean isCamera = false;    private boolean isStorage = false;    @Override    public void onClick(View view) {        switch (view.getId()){            case R.id.btn_search: // 查询                getImeiInfo();                break;            case R.id.btn_next: // 下一步                if (checkResult()){                    detect(imeiId, simId, custId);                }                break;            case R.id.iv_scan:                String[] REQUEST_PERMISSIONS = {                        Manifest.permission.CAMERA,                         // android.permission-group.CAMERA                        Manifest.permission.WRITE_EXTERNAL_STORAGE          // android.permission-group.STORAGE                };                PermissionUtils.getInstance(new PermissionUtils.PermissionGrant() {                    @Override                    public void onPermissionGranted(Object permissionNameOrCode, boolean isSuccess) {                        LogUtil.i(permissionNameOrCode + "........." + isSuccess);                        switch (String.valueOf(permissionNameOrCode)) {                            case Manifest.permission.CAMERA:                                isCamera = isSuccess;                                break;                            case Manifest.permission.WRITE_EXTERNAL_STORAGE:                                isStorage = isSuccess;                                if (isSuccess) {                                    FileUtil.createAllFile();                                }                                break;                            case PermissionUtils.REQUEST_MULTIPLE_PERMISSION + "":                                if (isSuccess) {                                    //gotoOcr();                                    Intent intent = new Intent(GPSDeviceInfoActivity.this, ScanActivity.class);                                    startActivityForResult(intent, RequestCode.REQUEST_CODE_IMEI);                                } else {                                    String tips = "";                                    if (!isCamera) {                                        tips = tips + "相机";                                    }                                    if (!isStorage) {                                        tips = tips + "存储";                                    }                                    if (!TextUtils.isEmpty(tips)) {                                        if (tips.startsWith("、")) {                                            tips = tips.replaceFirst("、", "");                                        }                                        DialogUtil.showMessageDg(GPSDeviceInfoActivity.this, "提示", tips + "权限被拒绝", "", "确定", null, new CustomDialog.OnDialogClickListener() {                                            @Override                                            public void onClick(CustomDialog dialog, int id, Object object) {                                                dialog.dismiss();                                            }                                        }, Gravity.CENTER);                                    }                                }                                break;                            default:                                break;                        }                    }                }).requestPermission(GPSDeviceInfoActivity.this, REQUEST_PERMISSIONS);                break;        }    }    /**     * 查询Imei相关信息     */    private void getImeiInfo() {        imeiId = et_input_imei.getText().toString().trim();        if (TextUtils.isEmpty(imeiId)){            ToastUtil.showToast(GPSDeviceInfoActivity.this, getString(R.string.empty_imei));            return;        }        searchImeiInfo(imeiId, custId);    }    @Override    protected void onActivityResult(int requestCode, int resultCode, Intent data) {        super.onActivityResult(requestCode, resultCode, data);        if (requestCode == RequestCode.REQUEST_CODE_IMEI && null != data){            String imei = data.getStringExtra("IMEI");            if (imei.startsWith("8630")){                et_input_imei.setText(imei.substring(4,imei.length()));            }else {                et_input_imei.setText(imei);            }        }    }    /**     * 绑定 imei和sim 并跳转下一个界面     * @param imeiId     * @param simId     */    private void detect(final String imeiId,final String simId,final String custId){        RequestExecutor.addTask(new BaseTask(GPSDeviceInfoActivity.this, getString(R.string.process_handle_wait), true) {            @Override            public ResponseBean sendRequest() {                return InstallBiz.detect(imeiId,simId,custId);            }            @Override            public void onSuccess(ResponseBean result) {                jumpActivity();            }            @Override            public void onFail(ResponseBean result) {                ToastUtil.showToast(GPSDeviceInfoActivity.this, result.getInfo());            }        });    }    /**     * 跳转装车位置界面     */    private void jumpActivity(){        Bundle bundle = new Bundle();        bundle.putString("simId", simId);        bundle.putString("custId", custId);        //bundle.putString("businessId", businessId);        //bundle.putString("taskId", taskId);        //bundle.putString("processInstanceId", processInstanceId);        bundle.putString("imeiId", imeiId);        IntentUtil.gotoActivity(GPSDeviceInfoActivity.this, GPSLoadingActivity.class, bundle);        finishActivity();    }    /**     * 判断是否有空值     * @return     */    private boolean checkResult(){        imeiId = et_input_imei.getText().toString().trim(); //imeiId        simId = tv_device_sim.getText().toString().trim(); // simId        mDeviceName = tv_device_name.getText().toString().trim(); //设备名称        mDeviceType = tv_device_type.getText().toString().trim(); //设备类型        //iccid = et_device_iccid.getText().toString().trim();//iccid        if (TextUtils.isEmpty(imeiId)){            ToastUtil.showToast(GPSDeviceInfoActivity.this, getString(R.string.empty_imei));            return false;        }        if (TextUtils.isEmpty(simId)){            ToastUtil.showToast(GPSDeviceInfoActivity.this, getString(R.string.empty_simId));            return false;        }        if (TextUtils.isEmpty(mDeviceName)){            ToastUtil.showToast(GPSDeviceInfoActivity.this, getString(R.string.empty_device_name));            return false;        }        if (TextUtils.isEmpty(mDeviceType)){            ToastUtil.showToast(GPSDeviceInfoActivity.this, getString(R.string.empty_device_type));            return false;        }        return true;    }    /**     * 输入imei 查询设备信息     * @param imeiId     * @param custId     */    private void searchImeiInfo(final String imeiId, final String custId){        RequestExecutor.addTask(new BaseTask(GPSDeviceInfoActivity.this, getString(R.string.process_handle_wait), true) {            @Override            public ResponseBean sendRequest() {                return InstallBiz.getImeiInfo(imeiId, custId);            }            @Override            public void onSuccess(ResponseBean result) {                /** 获取焦点 */                GPSDeviceInfoBean bean = (GPSDeviceInfoBean) result.getObject();                //custId = bean.getCustId();                /** 0是有线 1是无线 2是odb */                GPSDeviceInfoBean.ReturnListBean returnListBean =  bean.getReturnList().get(0);                tv_device_name.setText(returnListBean.getVersionType());//设备名称                //et_device_iccid.setText(bean.getICCID()); //iccid                tv_device_sim.setText(bean.getSimId()); //sim卡                custIdForYL = bean.getCustId();//                int deviceType = Integer.parseInt(returnListBean.getType());                isInput = bean.getIsInput();//判断是否可输入                if (isInput.equals("0")){//0不可输入                    tv_device_sim.setEnabled(false);                }else if (isInput.equals("1")){  //1可以输入                    tv_device_sim.setEnabled(true);                    tv_device_sim.requestFocus();                }                if (deviceType == 0){//设备类型                    tv_device_type.setText("有线");                }else if (deviceType == 1){                    tv_device_type.setText("无线");                }else if (deviceType == 2){                    tv_device_type.setText("ODB");                }            }            @Override            public void onFail(ResponseBean result) {                ToastUtil.showToast(GPSDeviceInfoActivity.this, result.getInfo());                tv_device_type.setText("");                tv_device_name.setText("");                tv_device_sim.setText("");            }        });    }}